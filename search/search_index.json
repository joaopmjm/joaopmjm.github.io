{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Funcionalidades No site em si serve apenas para visualizacao dos quizes, e com algumas funcionalidades em relacao ao login, como logout ou trocar a senha. As funcionalidades em relacao aos quizes (add, update, remove) sao via requisicoes a uma API, pode-se fazer isso via software postman , a seguir sao as requisicoes possiveis e suas chamadas. tipo caminho funcionalidade POST {BaseAddress}/?ID={ID do challenge} Entrega do desafio, fazendo cheques de hora da entrega, se o desafio existe, e promove logica com os dados dentro do QUIZ (Diagnostico, Problema, Codigo, etc...).","title":"Home"},{"location":"#funcionalidades","text":"No site em si serve apenas para visualizacao dos quizes, e com algumas funcionalidades em relacao ao login, como logout ou trocar a senha. As funcionalidades em relacao aos quizes (add, update, remove) sao via requisicoes a uma API, pode-se fazer isso via software postman , a seguir sao as requisicoes possiveis e suas chamadas. tipo caminho funcionalidade POST {BaseAddress}/?ID={ID do challenge} Entrega do desafio, fazendo cheques de hora da entrega, se o desafio existe, e promove logica com os dados dentro do QUIZ (Diagnostico, Problema, Codigo, etc...).","title":"Funcionalidades"},{"location":"installation/","text":"Dependencias SQLite3, $pip install sqlite3 Flask, $pip install Flask Flask http auth, $pip install flask_httpauth Pre-run Installar o SQliteBrowser, $snap install sqlitebrowser . Rodar o gerenciador de Banco de dados $sqlitebrowser . Criar um banco de dados zerado, file-> New Database Na aba Execute SQL copiar o codigo contido no arquivo quiz.sql e colar esse na aba e executar. Na aba Database Structure clicar na tabela USER e clicar em Modify Table , assim que abrir a aba de modificar, apenas clicar em OK Criar um arquivo no root do projeto chamado user.csv e adicionar um usuario com a senha, exemplo \" joao,123 \", sinceramente pouco importa o segundo valor. Rodar no root $python adduser.py , isso vai criar seu usuario Run Rodar no root $python softdes.py Entrar no Link escrito no terminal em Running on http://... Login e senha sao o primeiro valor do CSV criado anteriormente, entao no caso, login joao e senha joao . Pronto voce esta dentro.","title":"Instalacao"},{"location":"installation/#dependencias","text":"SQLite3, $pip install sqlite3 Flask, $pip install Flask Flask http auth, $pip install flask_httpauth","title":"Dependencias"},{"location":"installation/#pre-run","text":"Installar o SQliteBrowser, $snap install sqlitebrowser . Rodar o gerenciador de Banco de dados $sqlitebrowser . Criar um banco de dados zerado, file-> New Database Na aba Execute SQL copiar o codigo contido no arquivo quiz.sql e colar esse na aba e executar. Na aba Database Structure clicar na tabela USER e clicar em Modify Table , assim que abrir a aba de modificar, apenas clicar em OK Criar um arquivo no root do projeto chamado user.csv e adicionar um usuario com a senha, exemplo \" joao,123 \", sinceramente pouco importa o segundo valor. Rodar no root $python adduser.py , isso vai criar seu usuario","title":"Pre-run"},{"location":"installation/#run","text":"Rodar no root $python softdes.py Entrar no Link escrito no terminal em Running on http://... Login e senha sao o primeiro valor do CSV criado anteriormente, entao no caso, login joao e senha joao . Pronto voce esta dentro.","title":"Run"}]}